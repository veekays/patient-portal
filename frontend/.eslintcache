[{"/home/vikas/Documents/learn/innovaccer-task/frontend/src/index.js":"1","/home/vikas/Documents/learn/innovaccer-task/frontend/src/App.js":"2","/home/vikas/Documents/learn/innovaccer-task/frontend/src/reportWebVitals.js":"3","/home/vikas/Documents/learn/innovaccer-task/frontend/src/components/home.js":"4","/home/vikas/Documents/learn/innovaccer-task/frontend/src/api/index.js":"5","/home/vikas/Documents/learn/innovaccer-task/frontend/src/components/singlePatient.js":"6"},{"size":647,"mtime":1612502818259,"results":"7","hashOfConfig":"8"},{"size":399,"mtime":1612456503625,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1612338503459,"results":"10","hashOfConfig":"8"},{"size":2996,"mtime":1612506452246,"results":"11","hashOfConfig":"8"},{"size":1129,"mtime":1612457054520,"results":"12","hashOfConfig":"8"},{"size":2595,"mtime":1612502819631,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o8vvcs",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/vikas/Documents/learn/innovaccer-task/frontend/src/index.js",[],"/home/vikas/Documents/learn/innovaccer-task/frontend/src/App.js",[],"/home/vikas/Documents/learn/innovaccer-task/frontend/src/reportWebVitals.js",[],["28","29"],"/home/vikas/Documents/learn/innovaccer-task/frontend/src/components/home.js",["30"],"import React, { Component } from 'react';\nimport { Button, Toast, Card, Table } from '@innovaccer/design-system';\nimport { uploadData, getPatient } from \"../api\"\n\nconst schema = [\n    {\n        name: \"id\",\n        displayName: \"ID\"\n    },\n    {\n        name: \"name\",\n        displayName: \"Name\"\n    },\n    {\n        name: \"age\",\n        displayName: \"Age\"\n    },\n    {\n        name: \"gender\",\n        displayName: \"Gender\"\n    },\n    {\n        name: \"contact\",\n        displayName: \"Contact\"\n    },\n]\nexport default class App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            selectedFile: null,\n            visible: false,\n            message: \"\",\n        }\n    }\n\n    componentDidMount() {\n        this.getPatientData();\n    }\n\n    getPatientData(options) {\n        return getPatient(options)\n            .then((result) => {\n                if (result.status === 200) {\n                    return result.data.patient_list\n                }\n            })\n    }\n\n    onChangeHandler = event => {\n        this.setState({\n            selectedFile: event.target.files[0],\n            loaded: 0,\n        })\n    }\n\n    onClickHandler = () => {\n        uploadData(this.state.selectedFile)\n            .then((result) => {\n                if (result.status === 200) {\n                    this.setState({\n                        visible: true,\n                        message: result.data.message\n                    })\n                    setTimeout(() => {\n                        this.setState({\n                            visible: false\n                        })\n                        this.getPatientData()\n                    }, 5000)\n                }\n            })\n    }\n\n    handleClose = () => {\n        this.setState({\n            visible: false\n        })\n    }\n\n    handleRow(data) {\n        this.props.history.push(`/patient/${data.id}`)\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <div className=\"greeting-text\">\n                    <h2>Welcome to patient portal</h2>\n                    <p>Please Upload CSV file to fetch patient list</p>\n                </div>\n                <div className=\"file-uploader\">\n                    <input type=\"file\" className=\"choose\" name=\"file\" accept=\".csv\" onChange={this.onChangeHandler} />\n                    <Button type=\"button\" appearance=\"primary\" size=\"large\" onClick={this.onClickHandler}>Upload</Button>\n                </div>\n                {\n                    this.state.visible &&\n                    <div className=\"toast-wrapper\">\n                        <Toast appearance=\"success\" title={this.state.message} onClose={this.handleClose} />\n                    </div>\n                }\n                <Table loaderSchema={schema} type=\"resource\" fetchData={this.getPatientData} pageSize={5} withHeader={true} headerOptions={{ withSearch: true }} onRowClick={(rowIndex) => this.handleRow(rowIndex)} />\n            </div>\n        )\n    }\n\n}","/home/vikas/Documents/learn/innovaccer-task/frontend/src/api/index.js",[],"/home/vikas/Documents/learn/innovaccer-task/frontend/src/components/singlePatient.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":2,"column":25,"nodeType":"37","messageId":"38","endLine":2,"endColumn":29},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]